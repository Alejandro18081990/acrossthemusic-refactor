spring.sql.init.mode=never
spring.application.name=apiacrossmusic
spring.datasource.url=jdbc:mysql://localhost:3306/across_the_music?createDatabaseIfNotExist=true
spring.datasource.username=${USER_NAME}
spring.datasource.password=${PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.sql.init.data-locations=classpath:data.sql
server.port=8099
spring.jpa.defer-datasource-initialization=true
logging.level.org.hibernate.SQL = debug
spring.output.ansi.enabled=always

#https configuration
server.ssl.key-store=classpath:keycloak.p12
server.ssl.key-store-password=${KEYSTORE_PASSWORD}
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=${KEY_ALIAS}


#Key cloak configuration
spring.security.oauth2.client.registration.acrossthemusic-realm.provider=keycloak
spring.security.oauth2.client.registration.acrossthemusic-realm.client-name=keycloak
spring.security.oauth2.client.registration.acrossthemusic-realm.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.acrossthemusic-realm.client-secret=${CLIENT_SECRET}
spring.security.oauth2.client.registration.acrossthemusic-realm.scope=openid,offline_access,profile
spring.security.oauth2.client.registration.acrossthemusic-realm.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.keycloak.authorization-uri=https://localhost:8443/realms/acrossthemusic/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=https://localhost:8443/realms/acrossthemusic/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=https://localhost:8443/realms/acrossthemusic/protocol/openid-connect/certs

spring.security.oauth2.client.registration.acrossthemusic-realm.redirect-uri=https://localhost:8099/login/oauth2/code/acrossthemusic-realm
